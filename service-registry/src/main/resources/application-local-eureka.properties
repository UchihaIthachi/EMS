# This profile is active when running locally with Eureka.
# Service Registry IS the Eureka server.
# These settings are for if it also acts as a client (e.g., to config-server).
eureka.client.enabled=true # Enable client behavior for finding other services like config-server
eureka.instance.preferIpAddress=true
eureka.client.serviceUrl.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka} # It points to itself, or the cluster if scaled

# If service-registry needs to find config-server via Eureka (and config-server registers itself):
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.service-id=config-server # Assuming config-server registers with this ID
# Note: The main application.properties should already have eureka.client.registerWithEureka=false and fetchRegistry=false for its server role.
